L 15 jaan  2022 08:37:44 EET
+ hostname
mesecg
+ ansible-playbook infra.yaml --diff

PLAY [Init] ********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm2]
ok: [vm1]
ok: [vm3]

TASK [init : Update APT cache] *************************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [init : hostname] *********************************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [node_exporter : Install Prometheus node exporters] ***********************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [node_exporter : Sleep for 10 seconds and continue with play] *************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [node_exporter : Enable and start node exporters] *************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [rsyslog : Install Rsyslog] ***********************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [rsyslog : Reconfigure rsyslog] *******************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [rsyslog : Start rsyslog] *************************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [reverse_proxy : Install Nginx] *******************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [reverse_proxy : Copy the config file] ************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

PLAY [DNS Server] **************************************************************

TASK [bind : Install Bind9 Package] ********************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [bind : Change named.conf.options file] ***********************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [bind : Change db file] ***************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Change db reverse] ************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Change named.conf.local file] *************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Sleep for 10 seconds and continue with play] **********************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [bind : Add A records] ****************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Add CNAME records] ************************************************
skipping: [vm2] => (item={'cname': 'grafana', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'influxdb', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'prometheus', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'lb1', 'real': 'vm2'}) 
skipping: [vm2] => (item={'cname': 'lb2', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'grafana', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'mysql1', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'influxdb', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'mysql2', 'real': 'vm2'}) 
skipping: [vm2] => (item={'cname': 'ns1', 'real': 'vm1'}) 
skipping: [vm3] => (item={'cname': 'prometheus', 'real': 'vm1'}) 
skipping: [vm3] => (item={'cname': 'lb1', 'real': 'vm2'}) 
skipping: [vm2] => (item={'cname': 'ns2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'lb2', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'mysql1', 'real': 'vm3'}) 
skipping: [vm2] => (item={'cname': 'ns3', 'real': 'vm3'}) 
skipping: [vm2] => (item={'cname': 'web1', 'real': 'vm2'}) 
skipping: [vm2] => (item={'cname': 'web2', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'mysql2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'ns1', 'real': 'vm1'}) 
skipping: [vm3] => (item={'cname': 'ns2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'ns3', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'web1', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'web2', 'real': 'vm3'}) 
ok: [vm1] => (item={'cname': 'grafana', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'influxdb', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'prometheus', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'lb1', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'lb2', 'real': 'vm3'})
changed: [vm1] => (item={'cname': 'mysql1', 'real': 'vm3'})
changed: [vm1] => (item={'cname': 'mysql2', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'ns1', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'ns2', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'ns3', 'real': 'vm3'})
ok: [vm1] => (item={'cname': 'web1', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'web2', 'real': 'vm3'})

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Start bind] *******************************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [bind_exporter : Install Bind9 exporter] **********************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

PLAY [DNS Resolve] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [dns_resolve : Change resolv file] ****************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

PLAY [Web Server] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm3]
ok: [vm2]

TASK [docker : Install Docker] *************************************************
ok: [vm3]
ok: [vm2]

TASK [docker : Configure Ip Tables] ********************************************
ok: [vm3]
ok: [vm2]

TASK [docker : Apply iptables rules] *******************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [vm3]
ok: [vm2]

TASK [docker : Start Docker] ***************************************************
ok: [vm2]
ok: [vm3]

TASK [agama : Create Agama directory] ******************************************
ok: [vm3]
ok: [vm2]

TASK [agama : Download agama install file to /opt/agama] ***********************
ok: [vm2]
ok: [vm3]

TASK [agama : Log into DockerHub] **********************************************
ok: [vm3]
ok: [vm2]

TASK [agama : Build the image] *************************************************
ok: [vm3]
ok: [vm2]

TASK [agama : Start agama container] *******************************************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "expected_env": [
-        "AGAMA_DATABASE_URI=mysql+pymysql://agama:mysqlpass@192.168.42.111/agama",
+        "AGAMA_DATABASE_URI=mysql+pymysql://agama:mysqlpass@192.168.42.50/agama",
         "FLASK_APP=agama",
         "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
     ],

changed: [vm3] => (item=1)
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "expected_env": [
-        "AGAMA_DATABASE_URI=mysql+pymysql://agama:mysqlpass@192.168.42.111/agama",
+        "AGAMA_DATABASE_URI=mysql+pymysql://agama:mysqlpass@192.168.42.50/agama",
         "FLASK_APP=agama",
         "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
     ],

changed: [vm2] => (item=1)
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "expected_env": [
-        "AGAMA_DATABASE_URI=mysql+pymysql://agama:mysqlpass@192.168.42.111/agama",
+        "AGAMA_DATABASE_URI=mysql+pymysql://agama:mysqlpass@192.168.42.50/agama",
         "FLASK_APP=agama",
         "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
     ],

changed: [vm3] => (item=2)
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "expected_env": [
-        "AGAMA_DATABASE_URI=mysql+pymysql://agama:mysqlpass@192.168.42.111/agama",
+        "AGAMA_DATABASE_URI=mysql+pymysql://agama:mysqlpass@192.168.42.50/agama",
         "FLASK_APP=agama",
         "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
     ],

changed: [vm2] => (item=2)

TASK [nginx : Install Nginx] ***************************************************
ok: [vm3]
ok: [vm2]

TASK [nginx : Change index] ****************************************************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Install Haproxy] ***********************************************
ok: [vm3]
ok: [vm2]

TASK [haproxy : Configure Haproxy] *********************************************
ok: [vm3]
ok: [vm2]

TASK [haproxy : Haproxy exporter config] ***************************************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Install HAProxy exporter] **************************************
ok: [vm3]
ok: [vm2]

TASK [haproxy : Sleep for 10 seconds and continue with play] *******************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Start Haproxy and Exporters] ***********************************
ok: [vm3] => (item=haproxy)
ok: [vm2] => (item=haproxy)
ok: [vm2] => (item=prometheus-haproxy-exporter)
ok: [vm3] => (item=prometheus-haproxy-exporter)

TASK [haproxy : Check if haproxy is working] ***********************************
ok: [vm2]
ok: [vm3]

TASK [keepalived : Install Keepalived] *****************************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Add the user keepaliver] ************************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Configure Keepalived] ***************************************
ok: [vm2]
ok: [vm3]

TASK [keepalived : Add the script] *********************************************
ok: [vm2]
ok: [vm3]

TASK [keepalived : Download and unarchive keepalived exporter] *****************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Create keepalived exporter service] *************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Start Keepalived and Exporter] ******************************
ok: [vm3] => (item=keepalived)
ok: [vm2] => (item=keepalived)
ok: [vm3] => (item=keepalived-prometheus-exporter)
ok: [vm2] => (item=keepalived-prometheus-exporter)

PLAY [Prometheus] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [prometheus : Install Prometheus] *****************************************
ok: [vm1]

TASK [prometheus : Change /etc/default/prometheus] *****************************
ok: [vm1]

TASK [prometheus : Configure Prometheus Job] ***********************************
--- before: /etc/prometheus/prometheus.yml
+++ after: /home/mesecg/.ansible/tmp/ansible-local-5921snp1mxca/tmpp4lmnm4z/prometheus.conf.yml.j2
@@ -31,8 +31,8 @@
   - job_name: mysqld
     static_configs:
       - targets: 
+                - vm3:9104
                 - vm2:9104
-                - vm3:9104
         
   - job_name: nginx
     static_configs:

changed: [vm1]

RUNNING HANDLER [prometheus : Restart Prometheus] ******************************
changed: [vm1]

PLAY [Database Server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm2]
ok: [vm3]

TASK [mysql : Install MySql and PyMySql] ***************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : Copy the config file] ********************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : MySQL database] **************************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : MySQL user] ******************************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : MySQL replication user] ******************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : Turn on dynamic config change] ***********************************
skipping: [vm3]
ok: [vm2]

TASK [mysql : Keep static as it is] ********************************************
skipping: [vm2]
ok: [vm3]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : Install MySQL exporter] *********************************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : Create MySQL exporter user] *****************************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : collect facts about system services] ********************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : Sleep for 10 seconds and continue with play] ************
ok: [vm3]
ok: [vm2]

TASK [mysql_backup : Create mysql directory for backup] ************************
ok: [vm3]
ok: [vm2]

TASK [mysql_backup : Add MySQL user for backup] ********************************
ok: [vm2]
ok: [vm3]

TASK [mysql_backup : Change .my.cnf file] **************************************
ok: [vm3]
ok: [vm2]

TASK [mysql_backup : Add Cron when mysql server is changed] ********************
skipping: [vm3]
ok: [vm2]

TASK [mysql_backup : Delete Cron from Source Server] ***************************
skipping: [vm2]
ok: [vm3]

TASK [backup : Add the user backup] ********************************************
ok: [vm3]
ok: [vm2]

TASK [backup : Create restore directory] ***************************************
ok: [vm2]
ok: [vm3]

TASK [backup : Install Duplicity] **********************************************
ok: [vm3]
ok: [vm2]

TASK [backup : Add known_hosts to automize ssh] ********************************
ok: [vm3]
ok: [vm2]

PLAY [Node and Nginx Exporters] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [nginx : Install Nginx] ***************************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [nginx : Change index] ****************************************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [nginx_exporter : Download Nginx exporter] ********************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [nginx_exporter : Sleep for 10 seconds and continue with play] ************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [nginx_exporter : Restart Nginx exporter] *********************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

PLAY [Install Grafana] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [docker : Install Docker] *************************************************
ok: [vm1]

TASK [docker : Configure Ip Tables] ********************************************
ok: [vm1]

TASK [docker : Apply iptables rules] *******************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [vm1]

TASK [docker : Start Docker] ***************************************************
ok: [vm1]

TASK [grafana : Log into DockerHub] ********************************************
ok: [vm1]

TASK [grafana : Install grafana on docker] *************************************
ok: [vm1]

TASK [grafana : Create Grafana directories] ************************************
ok: [vm1] => (item=/opt/grafana/provisioning/dashboards)
ok: [vm1] => (item=/opt/grafana/provisioning/datasources)

TASK [grafana : Put the ini file where it needs to be] *************************
ok: [vm1]

TASK [grafana : Put the datasource file] ***************************************
ok: [vm1]

TASK [grafana : Put the yaml file] *********************************************
ok: [vm1]

TASK [grafana : Copy json files] ***********************************************
ok: [vm1] => (item=main.json)
--- before: /opt/grafana/provisioning/dashboards/mysql.json
+++ after: /home/mesecg/Desktop/ica0002/roles/grafana/files/mysql.json
@@ -22,7 +22,7 @@
   "fiscalYearStartMonth": 0,
   "graphTooltip": 0,
   "id": 3,
-  "iteration": 1641829834009,
+  "iteration": 1642187470019,
   "links": [],
   "liveNow": false,
   "panels": [
@@ -98,7 +98,23 @@
           "color": {
             "mode": "thresholds"
           },
-          "mappings": [],
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "WRITE/READ"
+                },
+                "1": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "READ ONLY"
+                }
+              },
+              "type": "value"
+            }
+          ],
           "thresholds": {
             "mode": "absolute",
             "steps": [
@@ -123,9 +139,9 @@
       },
       "id": 2,
       "options": {
-        "colorMode": "value",
-        "graphMode": "area",
-        "justifyMode": "auto",
+        "colorMode": "background",
+        "graphMode": "none",
+        "justifyMode": "center",
         "orientation": "auto",
         "reduceOptions": {
           "calcs": [
@@ -162,7 +178,35 @@
       "fieldConfig": {
         "defaults": {
           "color": {
-            "mode": "thresholds"
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
           },
           "mappings": [
             {
@@ -200,7 +244,32 @@
             ]
           }
         },
-        "overrides": []
+        "overrides": [
+          {
+            "__systemRef": "hideSeriesFrom",
+            "matcher": {
+              "id": "byNames",
+              "options": {
+                "mode": "exclude",
+                "names": [
+                  "sql_running on vm2:9104"
+                ],
+                "prefix": "All except:",
+                "readOnly": true
+              }
+            },
+            "properties": [
+              {
+                "id": "custom.hideFrom",
+                "value": {
+                  "legend": false,
+                  "tooltip": false,
+                  "viz": true
+                }
+              }
+            ]
+          }
+        ]
       },
       "gridPos": {
         "h": 8,
@@ -210,19 +279,14 @@
       },
       "id": 4,
       "options": {
-        "colorMode": "background",
-        "graphMode": "none",
-        "justifyMode": "center",
-        "orientation": "auto",
-        "reduceOptions": {
-          "calcs": [
-            "lastNotNull"
-          ],
-          "fields": "",
-          "values": false
-        },
-        "text": {},
-        "textMode": "auto"
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom"
+        },
+        "tooltip": {
+          "mode": "single"
+        }
       },
       "pluginVersion": "8.3.3",
       "targets": [
@@ -251,7 +315,7 @@
         }
       ],
       "title": "MySQL replication",
-      "type": "stat"
+      "type": "timeseries"
     }
   ],
   "refresh": "",
@@ -263,8 +327,8 @@
       {
         "current": {
           "selected": false,
-          "text": "mysql_global_variables_server_id{instance=\"vm1:9104\",job=\"mysqld\"}",
-          "value": "mysql_global_variables_server_id{instance=\"vm1:9104\",job=\"mysqld\"}"
+          "text": "mysql_global_variables_server_id{instance=\"vm2:9104\",job=\"mysqld\"}",
+          "value": "mysql_global_variables_server_id{instance=\"vm2:9104\",job=\"mysqld\"}"
         },
         "datasource": {
           "type": "prometheus",
@@ -296,6 +360,6 @@
   "timezone": "",
   "title": "MySql Server",
   "uid": "QqDJV-2nz",
-  "version": 2,
+  "version": 1,
   "weekStart": ""
 }
\ No newline at end of file

changed: [vm1] => (item=mysql.json)
ok: [vm1] => (item=syslog.json)
ok: [vm1] => (item=haproxy.json)

RUNNING HANDLER [grafana : Restart grafana container] **************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "restarted": false,
+    "restarted": true,
     "running": true
 }

changed: [vm1]

PLAY [pinger] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [pinger : Add user "pinger"] **********************************************
changed: [vm1]

TASK [pinger : Install Fping] **************************************************
The following NEW packages will be installed:
  fping
0 upgraded, 1 newly installed, 0 to remove and 70 not upgraded.
changed: [vm1]

TASK [pinger : Create install directory] ***************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/etc/pinger",
-    "state": "absent"
+    "state": "directory"
 }

changed: [vm1]

TASK [pinger : Create install directory] ***************************************
--- before
+++ after
@@ -1,5 +1,5 @@
 {
-    "owner": 0,
+    "owner": 1001,
     "path": "/usr/local/bin/pinger",
-    "state": "absent"
+    "state": "directory"
 }

changed: [vm1]

TASK [pinger : Place the .sh file where it needs to be] ************************
--- before
+++ after: /home/mesecg/.ansible/tmp/ansible-local-5921snp1mxca/tmpiz5j1mow/pinger.sh
@@ -0,0 +1,26 @@
+#!/bin/bash
+
+# Script contains several (more than 1) security issues.
+# Find them and fix them to get bonus on exam.
+# Problem example: SQL injection.
+
+for t in database_url database_name targets; do
+  if ! grep -q "^${t}=" /etc/pinger/pinger.conf; then
+    logger "$0 Failed to get $t from config"
+    exit 1
+  fi
+done
+
+which fping > /dev/null || (logger "fping not found"; exit 1)
+
+db_url=$(grep "^database_url=" /etc/pinger/pinger.conf | sed 's/^.*=//')
+db_name=$(grep "^database_name=" /etc/pinger/pinger.conf | sed 's/^.*=//')
+targets=$(grep "^targets=" /etc/pinger/pinger.conf | sed 's/^.*=//' | sed 's/\(,\|;\)/ /g')
+
+curl -i -XPOST "${db_url}/query" --data-urlencode "q=CREATE DATABASE $db_name" 1>/dev/null 2>/dev/null
+
+while true; do
+  result=$(fping -C1 -q $targets 2>&1 | awk -v db=$db_name '{print db",dst="$1" rtt="$3}')
+  curl -i -XPOST "${db_url}/write?db=$db_name" --data-binary "$result" 1>/dev/null 2>/dev/null
+ sleep 1
+done

changed: [vm1]

TASK [pinger : Create a service called pinger] *********************************
--- before
+++ after: /home/mesecg/.ansible/tmp/ansible-local-5921snp1mxca/tmpz44uylf_/pinger.service
@@ -0,0 +1,12 @@
+[Unit]
+Description= pinger service for influxdb
+After=network.target
+
+[Service]
+Restart=always
+RestartSec=1
+User=pinger
+ExecStart= /usr/local/bin/pinger/pinger.sh $ARGS
+
+[Install]
+WantedBy=multi-user.target
\ No newline at end of file

changed: [vm1]

TASK [pinger : Put the config file in place] ***********************************
--- before
+++ after: /home/mesecg/.ansible/tmp/ansible-local-5921snp1mxca/tmproww7o2y/pinger.conf
@@ -0,0 +1,3 @@
+database_url=http://vm1:8086
+database_name=latency
+targets=google.com,cloudflare.com,twitter.com
\ No newline at end of file

changed: [vm1]

TASK [pinger : collect facts about system services] ****************************
ok: [vm1]

TASK [pinger : Sleep for 10 seconds and continue with play] ********************
changed: [vm1]

RUNNING HANDLER [pinger : Restart pinger] **************************************
changed: [vm1]

RUNNING HANDLER [pinger : Reload Daemon] ***************************************
changed: [vm1]

PLAY [Influxdb] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [influxdb : apt_key] ******************************************************
ok: [vm1]

TASK [influxdb : apt_repository] ***********************************************
ok: [vm1]

TASK [influxdb : apt] **********************************************************
ok: [vm1]

TASK [influxdb : Configure InfluxDb] *******************************************
ok: [vm1]

TASK [influxdb : Configure Telegraf] *******************************************
ok: [vm1]

TASK [influxdb : Start "{{item}}"] *********************************************
ok: [vm1] => (item=influxdb)
ok: [vm1] => (item=telegraf)

TASK [influxdb_backup : Create influxdb directory for backup] ******************
ok: [vm1]

TASK [influxdb_backup : Schedule InfluxDb Dumps] *******************************
ok: [vm1]

TASK [influxdb_exporter : Download Influxdb Exporter] **************************
ok: [vm1]

TASK [influxdb_exporter : Create a service for influxdb exporter] **************
ok: [vm1]

TASK [influxdb_exporter : Start the service] ***********************************
ok: [vm1]

PLAY RECAP *********************************************************************
vm1                        : ok=71   changed=15   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
vm2                        : ok=72   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
vm3                        : ok=72   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   

+ ansible-playbook infra.yaml --diff

PLAY [Init] ********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [init : Update APT cache] *************************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [init : hostname] *********************************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [node_exporter : Install Prometheus node exporters] ***********************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [node_exporter : Sleep for 10 seconds and continue with play] *************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [node_exporter : Enable and start node exporters] *************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [rsyslog : Install Rsyslog] ***********************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [rsyslog : Reconfigure rsyslog] *******************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [rsyslog : Start rsyslog] *************************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [reverse_proxy : Install Nginx] *******************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [reverse_proxy : Copy the config file] ************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

PLAY [DNS Server] **************************************************************

TASK [bind : Install Bind9 Package] ********************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

TASK [bind : Change named.conf.options file] ***********************************
ok: [vm2]
ok: [vm1]
ok: [vm3]

TASK [bind : Change db file] ***************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Change db reverse] ************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Change named.conf.local file] *************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Sleep for 10 seconds and continue with play] **********************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [bind : Add A records] ****************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Add CNAME records] ************************************************
skipping: [vm2] => (item={'cname': 'grafana', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'influxdb', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'prometheus', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'lb1', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'grafana', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'lb2', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'influxdb', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'mysql1', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'prometheus', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'mysql2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'lb1', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'lb2', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'mysql1', 'real': 'vm3'}) 
skipping: [vm2] => (item={'cname': 'ns1', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'ns2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'mysql2', 'real': 'vm2'}) 
skipping: [vm2] => (item={'cname': 'ns3', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'ns1', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'web1', 'real': 'vm2'}) 
skipping: [vm2] => (item={'cname': 'web2', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'ns2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'ns3', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'web1', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'web2', 'real': 'vm3'}) 
ok: [vm1] => (item={'cname': 'grafana', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'influxdb', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'prometheus', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'lb1', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'lb2', 'real': 'vm3'})
ok: [vm1] => (item={'cname': 'mysql1', 'real': 'vm3'})
ok: [vm1] => (item={'cname': 'mysql2', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'ns1', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'ns2', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'ns3', 'real': 'vm3'})
ok: [vm1] => (item={'cname': 'web1', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'web2', 'real': 'vm3'})

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Start bind] *******************************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [bind_exporter : Install Bind9 exporter] **********************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

PLAY [DNS Resolve] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [dns_resolve : Change resolv file] ****************************************
ok: [vm1]
ok: [vm2]
ok: [vm3]

PLAY [Web Server] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm3]
ok: [vm2]

TASK [docker : Install Docker] *************************************************
ok: [vm2]
ok: [vm3]

TASK [docker : Configure Ip Tables] ********************************************
ok: [vm2]
ok: [vm3]

TASK [docker : Apply iptables rules] *******************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [vm3]
ok: [vm2]

TASK [docker : Start Docker] ***************************************************
ok: [vm2]
ok: [vm3]

TASK [agama : Create Agama directory] ******************************************
ok: [vm3]
ok: [vm2]

TASK [agama : Download agama install file to /opt/agama] ***********************
ok: [vm2]
ok: [vm3]

TASK [agama : Log into DockerHub] **********************************************
ok: [vm3]
ok: [vm2]

TASK [agama : Build the image] *************************************************
ok: [vm3]
ok: [vm2]

TASK [agama : Start agama container] *******************************************
ok: [vm3] => (item=1)
ok: [vm2] => (item=1)
ok: [vm3] => (item=2)
ok: [vm2] => (item=2)

TASK [nginx : Install Nginx] ***************************************************
ok: [vm2]
ok: [vm3]

TASK [nginx : Change index] ****************************************************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Install Haproxy] ***********************************************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Configure Haproxy] *********************************************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Haproxy exporter config] ***************************************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Install HAProxy exporter] **************************************
ok: [vm3]
ok: [vm2]

TASK [haproxy : Sleep for 10 seconds and continue with play] *******************
ok: [vm3]
ok: [vm2]

TASK [haproxy : Start Haproxy and Exporters] ***********************************
ok: [vm2] => (item=haproxy)
ok: [vm3] => (item=haproxy)
ok: [vm3] => (item=prometheus-haproxy-exporter)
ok: [vm2] => (item=prometheus-haproxy-exporter)

TASK [haproxy : Check if haproxy is working] ***********************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Install Keepalived] *****************************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Add the user keepaliver] ************************************
ok: [vm2]
ok: [vm3]

TASK [keepalived : Configure Keepalived] ***************************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Add the script] *********************************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Download and unarchive keepalived exporter] *****************
ok: [vm2]
ok: [vm3]

TASK [keepalived : Create keepalived exporter service] *************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Start Keepalived and Exporter] ******************************
ok: [vm2] => (item=keepalived)
ok: [vm3] => (item=keepalived)
ok: [vm2] => (item=keepalived-prometheus-exporter)
ok: [vm3] => (item=keepalived-prometheus-exporter)

PLAY [Prometheus] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [prometheus : Install Prometheus] *****************************************
ok: [vm1]

TASK [prometheus : Change /etc/default/prometheus] *****************************
ok: [vm1]

TASK [prometheus : Configure Prometheus Job] ***********************************
ok: [vm1]

PLAY [Database Server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm2]
ok: [vm3]

TASK [mysql : Install MySql and PyMySql] ***************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : Copy the config file] ********************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : MySQL database] **************************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : MySQL user] ******************************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : MySQL replication user] ******************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : Turn on dynamic config change] ***********************************
skipping: [vm3]
ok: [vm2]

TASK [mysql : Keep static as it is] ********************************************
skipping: [vm2]
ok: [vm3]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : Install MySQL exporter] *********************************
ok: [vm2]
ok: [vm3]

TASK [mysql_exporter : Create MySQL exporter user] *****************************
ok: [vm2]
ok: [vm3]

TASK [mysql_exporter : collect facts about system services] ********************
ok: [vm2]
ok: [vm3]

TASK [mysql_exporter : Sleep for 10 seconds and continue with play] ************
ok: [vm2]
ok: [vm3]

TASK [mysql_backup : Create mysql directory for backup] ************************
ok: [vm3]
ok: [vm2]

TASK [mysql_backup : Add MySQL user for backup] ********************************
ok: [vm2]
ok: [vm3]

TASK [mysql_backup : Change .my.cnf file] **************************************
ok: [vm3]
ok: [vm2]

TASK [mysql_backup : Add Cron when mysql server is changed] ********************
skipping: [vm3]
ok: [vm2]

TASK [mysql_backup : Delete Cron from Source Server] ***************************
skipping: [vm2]
ok: [vm3]

TASK [backup : Add the user backup] ********************************************
ok: [vm2]
ok: [vm3]

TASK [backup : Create restore directory] ***************************************
ok: [vm3]
ok: [vm2]

TASK [backup : Install Duplicity] **********************************************
ok: [vm2]
ok: [vm3]

TASK [backup : Add known_hosts to automize ssh] ********************************
ok: [vm3]
ok: [vm2]

PLAY [Node and Nginx Exporters] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [nginx : Install Nginx] ***************************************************
ok: [vm3]
ok: [vm1]
ok: [vm2]

TASK [nginx : Change index] ****************************************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [nginx_exporter : Download Nginx exporter] ********************************
ok: [vm2]
ok: [vm1]
ok: [vm3]

TASK [nginx_exporter : Sleep for 10 seconds and continue with play] ************
ok: [vm2]
ok: [vm1]
ok: [vm3]

TASK [nginx_exporter : Restart Nginx exporter] *********************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

PLAY [Install Grafana] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [docker : Install Docker] *************************************************
ok: [vm1]

TASK [docker : Configure Ip Tables] ********************************************
ok: [vm1]

TASK [docker : Apply iptables rules] *******************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [vm1]

TASK [docker : Start Docker] ***************************************************
ok: [vm1]

TASK [grafana : Log into DockerHub] ********************************************
ok: [vm1]

TASK [grafana : Install grafana on docker] *************************************
ok: [vm1]

TASK [grafana : Create Grafana directories] ************************************
ok: [vm1] => (item=/opt/grafana/provisioning/dashboards)
ok: [vm1] => (item=/opt/grafana/provisioning/datasources)

TASK [grafana : Put the ini file where it needs to be] *************************
ok: [vm1]

TASK [grafana : Put the datasource file] ***************************************
ok: [vm1]

TASK [grafana : Put the yaml file] *********************************************
ok: [vm1]

TASK [grafana : Copy json files] ***********************************************
ok: [vm1] => (item=main.json)
ok: [vm1] => (item=mysql.json)
ok: [vm1] => (item=syslog.json)
ok: [vm1] => (item=haproxy.json)

PLAY [pinger] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [pinger : Add user "pinger"] **********************************************
ok: [vm1]

TASK [pinger : Install Fping] **************************************************
ok: [vm1]

TASK [pinger : Create install directory] ***************************************
ok: [vm1]

TASK [pinger : Create install directory] ***************************************
ok: [vm1]

TASK [pinger : Place the .sh file where it needs to be] ************************
ok: [vm1]

TASK [pinger : Create a service called pinger] *********************************
ok: [vm1]

TASK [pinger : Put the config file in place] ***********************************
ok: [vm1]

TASK [pinger : collect facts about system services] ****************************
ok: [vm1]

TASK [pinger : Sleep for 10 seconds and continue with play] ********************
ok: [vm1]

PLAY [Influxdb] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [influxdb : apt_key] ******************************************************
ok: [vm1]

TASK [influxdb : apt_repository] ***********************************************
ok: [vm1]

TASK [influxdb : apt] **********************************************************
ok: [vm1]

TASK [influxdb : Configure InfluxDb] *******************************************
ok: [vm1]

TASK [influxdb : Configure Telegraf] *******************************************
ok: [vm1]

TASK [influxdb : Start "{{item}}"] *********************************************
ok: [vm1] => (item=influxdb)
ok: [vm1] => (item=telegraf)

TASK [influxdb_backup : Create influxdb directory for backup] ******************
ok: [vm1]

TASK [influxdb_backup : Schedule InfluxDb Dumps] *******************************
ok: [vm1]

TASK [influxdb_exporter : Download Influxdb Exporter] **************************
ok: [vm1]

TASK [influxdb_exporter : Create a service for influxdb exporter] **************
ok: [vm1]

TASK [influxdb_exporter : Start the service] ***********************************
ok: [vm1]

PLAY RECAP *********************************************************************
vm1                        : ok=67   changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
vm2                        : ok=72   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
vm3                        : ok=72   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   

+ ansible all -b -m reboot -a test_command=uptime
vm1 | CHANGED => {
    "changed": true,
    "elapsed": 35,
    "rebooted": true
}
vm2 | CHANGED => {
    "changed": true,
    "elapsed": 42,
    "rebooted": true
}
vm3 | CHANGED => {
    "changed": true,
    "elapsed": 42,
    "rebooted": true
}
+ ansible-playbook infra.yaml --diff

PLAY [Init] ********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [init : Update APT cache] *************************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [init : hostname] *********************************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [node_exporter : Install Prometheus node exporters] ***********************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [node_exporter : Sleep for 10 seconds and continue with play] *************
ok: [vm2]
ok: [vm1]
ok: [vm3]

TASK [node_exporter : Enable and start node exporters] *************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [rsyslog : Install Rsyslog] ***********************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [rsyslog : Reconfigure rsyslog] *******************************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [rsyslog : Start rsyslog] *************************************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [reverse_proxy : Install Nginx] *******************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [reverse_proxy : Copy the config file] ************************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

PLAY [DNS Server] **************************************************************

TASK [bind : Install Bind9 Package] ********************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [bind : Change named.conf.options file] ***********************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

TASK [bind : Change db file] ***************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Change db reverse] ************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Change named.conf.local file] *************************************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Sleep for 10 seconds and continue with play] **********************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [bind : Add A records] ****************************************************
skipping: [vm2]
skipping: [vm3]
ok: [vm1]

TASK [bind : Add CNAME records] ************************************************
skipping: [vm2] => (item={'cname': 'grafana', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'influxdb', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'prometheus', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'lb1', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'grafana', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'lb2', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'influxdb', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'mysql1', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'prometheus', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'mysql2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'lb1', 'real': 'vm2'}) 
skipping: [vm2] => (item={'cname': 'ns1', 'real': 'vm1'}) 
skipping: [vm3] => (item={'cname': 'lb2', 'real': 'vm3'}) 
skipping: [vm2] => (item={'cname': 'ns2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'mysql1', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'mysql2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'ns1', 'real': 'vm1'}) 
skipping: [vm2] => (item={'cname': 'ns3', 'real': 'vm3'}) 
skipping: [vm2] => (item={'cname': 'web1', 'real': 'vm2'}) 
skipping: [vm2] => (item={'cname': 'web2', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'ns2', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'ns3', 'real': 'vm3'}) 
skipping: [vm3] => (item={'cname': 'web1', 'real': 'vm2'}) 
skipping: [vm3] => (item={'cname': 'web2', 'real': 'vm3'}) 
ok: [vm1] => (item={'cname': 'grafana', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'influxdb', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'prometheus', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'lb1', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'lb2', 'real': 'vm3'})
ok: [vm1] => (item={'cname': 'mysql1', 'real': 'vm3'})
ok: [vm1] => (item={'cname': 'mysql2', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'ns1', 'real': 'vm1'})
ok: [vm1] => (item={'cname': 'ns2', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'ns3', 'real': 'vm3'})
ok: [vm1] => (item={'cname': 'web1', 'real': 'vm2'})
ok: [vm1] => (item={'cname': 'web2', 'real': 'vm3'})

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Start bind] *******************************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [bind_exporter : Install Bind9 exporter] **********************************
ok: [vm3]
ok: [vm2]
ok: [vm1]

PLAY [DNS Resolve] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [dns_resolve : Change resolv file] ****************************************
ok: [vm2]
ok: [vm3]
ok: [vm1]

PLAY [Web Server] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm2]
ok: [vm3]

TASK [docker : Install Docker] *************************************************
ok: [vm2]
ok: [vm3]

TASK [docker : Configure Ip Tables] ********************************************
ok: [vm2]
ok: [vm3]

TASK [docker : Apply iptables rules] *******************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [vm2]
ok: [vm3]

TASK [docker : Start Docker] ***************************************************
ok: [vm2]
ok: [vm3]

TASK [agama : Create Agama directory] ******************************************
ok: [vm3]
ok: [vm2]

TASK [agama : Download agama install file to /opt/agama] ***********************
ok: [vm2]
ok: [vm3]

TASK [agama : Log into DockerHub] **********************************************
ok: [vm3]
ok: [vm2]

TASK [agama : Build the image] *************************************************
ok: [vm2]
ok: [vm3]

TASK [agama : Start agama container] *******************************************
ok: [vm3] => (item=1)
ok: [vm2] => (item=1)
ok: [vm3] => (item=2)
ok: [vm2] => (item=2)

TASK [nginx : Install Nginx] ***************************************************
ok: [vm3]
ok: [vm2]

TASK [nginx : Change index] ****************************************************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Install Haproxy] ***********************************************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Configure Haproxy] *********************************************
ok: [vm3]
ok: [vm2]

TASK [haproxy : Haproxy exporter config] ***************************************
ok: [vm3]
ok: [vm2]

TASK [haproxy : Install HAProxy exporter] **************************************
ok: [vm3]
ok: [vm2]

TASK [haproxy : Sleep for 10 seconds and continue with play] *******************
ok: [vm2]
ok: [vm3]

TASK [haproxy : Start Haproxy and Exporters] ***********************************
ok: [vm2] => (item=haproxy)
ok: [vm3] => (item=haproxy)
ok: [vm2] => (item=prometheus-haproxy-exporter)
ok: [vm3] => (item=prometheus-haproxy-exporter)

TASK [haproxy : Check if haproxy is working] ***********************************
ok: [vm2]
ok: [vm3]

TASK [keepalived : Install Keepalived] *****************************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Add the user keepaliver] ************************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Configure Keepalived] ***************************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Add the script] *********************************************
ok: [vm2]
ok: [vm3]

TASK [keepalived : Download and unarchive keepalived exporter] *****************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Create keepalived exporter service] *************************
ok: [vm3]
ok: [vm2]

TASK [keepalived : Start Keepalived and Exporter] ******************************
ok: [vm2] => (item=keepalived)
ok: [vm3] => (item=keepalived)
ok: [vm3] => (item=keepalived-prometheus-exporter)
ok: [vm2] => (item=keepalived-prometheus-exporter)

PLAY [Prometheus] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [prometheus : Install Prometheus] *****************************************
ok: [vm1]

TASK [prometheus : Change /etc/default/prometheus] *****************************
ok: [vm1]

TASK [prometheus : Configure Prometheus Job] ***********************************
ok: [vm1]

PLAY [Database Server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : Install MySql and PyMySql] ***************************************
ok: [vm2]
ok: [vm3]

TASK [mysql : Copy the config file] ********************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : MySQL database] **************************************************
ok: [vm2]
ok: [vm3]

TASK [mysql : MySQL user] ******************************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : MySQL replication user] ******************************************
ok: [vm3]
ok: [vm2]

TASK [mysql : Turn on dynamic config change] ***********************************
skipping: [vm3]
ok: [vm2]

TASK [mysql : Keep static as it is] ********************************************
skipping: [vm2]
ok: [vm3]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [vm2]
ok: [vm3]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [vm2]
ok: [vm3]

TASK [mysql_exporter : Install MySQL exporter] *********************************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : Create MySQL exporter user] *****************************
ok: [vm3]
ok: [vm2]

TASK [mysql_exporter : collect facts about system services] ********************
ok: [vm2]
ok: [vm3]

TASK [mysql_exporter : Sleep for 10 seconds and continue with play] ************
ok: [vm3]
ok: [vm2]

TASK [mysql_backup : Create mysql directory for backup] ************************
ok: [vm2]
ok: [vm3]

TASK [mysql_backup : Add MySQL user for backup] ********************************
ok: [vm3]
ok: [vm2]

TASK [mysql_backup : Change .my.cnf file] **************************************
ok: [vm2]
ok: [vm3]

TASK [mysql_backup : Add Cron when mysql server is changed] ********************
skipping: [vm3]
ok: [vm2]

TASK [mysql_backup : Delete Cron from Source Server] ***************************
skipping: [vm2]
ok: [vm3]

TASK [backup : Add the user backup] ********************************************
ok: [vm2]
ok: [vm3]

TASK [backup : Create restore directory] ***************************************
ok: [vm2]
ok: [vm3]

TASK [backup : Install Duplicity] **********************************************
ok: [vm2]
ok: [vm3]

TASK [backup : Add known_hosts to automize ssh] ********************************
ok: [vm2]
ok: [vm3]

PLAY [Node and Nginx Exporters] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]
ok: [vm3]
ok: [vm2]

TASK [nginx : Install Nginx] ***************************************************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [nginx : Change index] ****************************************************
ok: [vm2]
ok: [vm1]
ok: [vm3]

TASK [nginx_exporter : Download Nginx exporter] ********************************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [nginx_exporter : Sleep for 10 seconds and continue with play] ************
ok: [vm1]
ok: [vm2]
ok: [vm3]

TASK [nginx_exporter : Restart Nginx exporter] *********************************
ok: [vm1]
ok: [vm2]
ok: [vm3]

PLAY [Install Grafana] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [docker : Install Docker] *************************************************
ok: [vm1]

TASK [docker : Configure Ip Tables] ********************************************
ok: [vm1]

TASK [docker : Apply iptables rules] *******************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [vm1]

TASK [docker : Start Docker] ***************************************************
ok: [vm1]

TASK [grafana : Log into DockerHub] ********************************************
ok: [vm1]

TASK [grafana : Install grafana on docker] *************************************
ok: [vm1]

TASK [grafana : Create Grafana directories] ************************************
ok: [vm1] => (item=/opt/grafana/provisioning/dashboards)
ok: [vm1] => (item=/opt/grafana/provisioning/datasources)

TASK [grafana : Put the ini file where it needs to be] *************************
ok: [vm1]

TASK [grafana : Put the datasource file] ***************************************
ok: [vm1]

TASK [grafana : Put the yaml file] *********************************************
ok: [vm1]

TASK [grafana : Copy json files] ***********************************************
ok: [vm1] => (item=main.json)
ok: [vm1] => (item=mysql.json)
ok: [vm1] => (item=syslog.json)
ok: [vm1] => (item=haproxy.json)

PLAY [pinger] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [pinger : Add user "pinger"] **********************************************
ok: [vm1]

TASK [pinger : Install Fping] **************************************************
ok: [vm1]

TASK [pinger : Create install directory] ***************************************
ok: [vm1]

TASK [pinger : Create install directory] ***************************************
ok: [vm1]

TASK [pinger : Place the .sh file where it needs to be] ************************
ok: [vm1]

TASK [pinger : Create a service called pinger] *********************************
ok: [vm1]

TASK [pinger : Put the config file in place] ***********************************
ok: [vm1]

TASK [pinger : collect facts about system services] ****************************
ok: [vm1]

TASK [pinger : Sleep for 10 seconds and continue with play] ********************
changed: [vm1]

RUNNING HANDLER [pinger : Restart pinger] **************************************
changed: [vm1]

PLAY [Influxdb] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [vm1]

TASK [influxdb : apt_key] ******************************************************
ok: [vm1]

TASK [influxdb : apt_repository] ***********************************************
ok: [vm1]

TASK [influxdb : apt] **********************************************************
ok: [vm1]

TASK [influxdb : Configure InfluxDb] *******************************************
ok: [vm1]

TASK [influxdb : Configure Telegraf] *******************************************
ok: [vm1]

TASK [influxdb : Start "{{item}}"] *********************************************
ok: [vm1] => (item=influxdb)
ok: [vm1] => (item=telegraf)

TASK [influxdb_backup : Create influxdb directory for backup] ******************
ok: [vm1]

TASK [influxdb_backup : Schedule InfluxDb Dumps] *******************************
ok: [vm1]

TASK [influxdb_exporter : Download Influxdb Exporter] **************************
ok: [vm1]

TASK [influxdb_exporter : Create a service for influxdb exporter] **************
ok: [vm1]

TASK [influxdb_exporter : Start the service] ***********************************
ok: [vm1]

PLAY RECAP *********************************************************************
vm1                        : ok=68   changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
vm2                        : ok=72   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
vm3                        : ok=72   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   

+ date
L 15 jaan  2022 08:50:55 EET
